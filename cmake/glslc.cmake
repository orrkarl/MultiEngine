FIND_PROGRAM(GLSLC glslc)
FIND_PACKAGE(Python3 COMPONENTS Interpreter REQUIRED)

SET(SPIRV_EMBED_PATH "${CMAKE_CURRENT_LIST_DIR}/spirv_num_to_cpp.py")

function(ADD_SPIRV_LIBRARY)
    SET(SINGLE_ARGS TARGET NAMESPACE GENERATED_HEADER_PATH)
    SET(MULTI_ARGS HEADERS SOURCES MACROS)
    CMAKE_PARSE_ARGUMENTS(RSRC_ARG "" "${SINGLE_ARGS}" "${MULTI_ARGS}" ${ARGN}) 

    SET(LIB_OUTPUT_DIR "${CMAKE_CURRENT_BINARY_DIR}")
    SET(SPIRV_OUTPUT_DIR "${LIB_OUTPUT_DIR}/spirv")

    ADD_CUSTOM_COMMAND(
            OUTPUT "${SPIRV_OUTPUT_DIR}"
            COMMAND ${CMAKE_COMMAND} -E make_directory "${SPIRV_OUTPUT_DIR}"
            VERBATIM)

    FOREACH(MACRO ${RSRC_ARG_MACROS})
        SET(GLSLC_MACROS ${GLSLC_MACROS} -D${MACRO})
    ENDFOREACH()

    FOREACH(FILE_NAME ${RSRC_ARG_SOURCES})
    
        GET_FILENAME_COMPONENT(FILE_NAME_ONLY ${FILE_NAME} NAME)
        SET(RESULT_FILE_PATH "${LIB_OUTPUT_DIR}/${FILE_NAME_ONLY}")
        SET(SPIRV_OUTPUT "${SPIRV_OUTPUT_DIR}/${FILE_NAME_ONLY}")
        SET(EMBED_OUTPUT "${RESULT_FILE_PATH}.cpp")

        SET(GLSLC_ADDITIONAL_PARAMS --target-env=vulkan1.1 -mfmt=num -g -Werror -O -fshader-stage=compute ${GLSLC_MACROS})
        ADD_CUSTOM_COMMAND(
                OUTPUT "${SPIRV_OUTPUT}"
                COMMAND ${GLSLC} -o "${SPIRV_OUTPUT}" ${GLSLC_ADDITIONAL_PARAMS} "${FILE_NAME}"
                WORKING_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}"
                MAIN_DEPENDENCY "${FILE_NAME}"
                DEPENDS "${RSRC_ARG_HEADERS}" "${SPIRV_OUTPUT_DIR}"
                VERBATIM)
                
        ADD_CUSTOM_COMMAND(
                OUTPUT "${EMBED_OUTPUT}"
                COMMAND ${Python3_EXECUTABLE} "${SPIRV_EMBED_PATH}" source -s "${SPIRV_OUTPUT}" -d "${LIB_OUTPUT_DIR}" -ns ${RSRC_ARG_NAMESPACE}
                WORKING_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}"
                MAIN_DEPENDENCY "${SPIRV_OUTPUT}"
                VERBATIM)
                
        LIST(APPEND OUTPUT_FILES "${EMBED_OUTPUT}")
        
    ENDFOREACH()
    
    SET(GENERATED_HEADER "${CMAKE_CURRENT_SOURCE_DIR}/${RSRC_ARG_GENERATED_HEADER_PATH}")
    ADD_CUSTOM_COMMAND(
            OUTPUT "${GENERATED_HEADER}"
            COMMAND ${Python3_EXECUTABLE} "${SPIRV_EMBED_PATH}" header -s "${RSRC_ARG_SOURCES}" -d "${GENERATED_HEADER}" -ns ${RSRC_ARG_NAMESPACE}
            WORKING_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}"
            DEPENDS "${RSRC_ARG_SOURCES}"
            VERBATIM)

    ADD_LIBRARY(${RSRC_ARG_TARGET} ${OUTPUT_FILES} "${GENERATED_HEADER}")
endfunction()

import argparse
import os
import re


SOURCE_FMT = """// AUTOGENERATED
// Generated by file_to_cpp_string.py, from '{file_name}'

#include <stddef.h>
#include <stdint.h>

namespace {namespace} {{

const uint32_t {var_name}[] = {{
{raw_lines}
}};

const size_t {var_name}_size = {total_data_size};

}} // {namespace}

// AUTOGENERATED
"""


def readfile(path):
    with open(path) as f:
        return f.read()


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('-s', '--src-path', help='source file to stringify', required=True)
    parser.add_argument('-d', '--dest-path', help='generated files dir', required=True)
    parser.add_argument('-ns', '--namespace', help='namespace of the generated arguments', required=True)

    args = parser.parse_args()

    file_data = readfile(args.src_path)

    file_name = os.path.basename(args.src_path)
    var_name = file_name.replace('.', '_')
    total_data_size = len(file_data.split(','))

    with open(os.path.join(args.dest_path, file_name + '.cpp'), 'w') as f:
        f.write(SOURCE_FMT.format(file_name=file_name, namespace=args.namespace, var_name=var_name,
                                  raw_lines=file_data, total_data_size=total_data_size))

if __name__ == '__main__':
    main()
